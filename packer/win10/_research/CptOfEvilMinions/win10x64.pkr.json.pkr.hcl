
variable "iso_file" {
  type    = string
  default = "ISO-storage:iso/16299.15.170928-1534.rs3_release_CLIENTENTERPRISEEVAL_OEMRET_x64FRE_en-us.iso"
}

variable "proxmox_host" {
  type    = string
  default = ""
}

variable "proxmox_password" {
  type    = string
  default = ""
}

variable "proxmox_skip_tls_verify" {
  type    = string
  default = ""
}

variable "proxmox_url" {
  type    = string
  default = ""
}

variable "proxmox_username" {
  type    = string
  default = ""
}

variable "vm_cpu_cores" {
  type    = string
  default = "4"
}

variable "vm_disk_size" {
  type    = string
  default = "60G"
}

variable "vm_memory" {
  type    = string
  default = "4096"
}

variable "vm_name" {
  type    = string
  default = "Win10x64-VM-template"
}

variable "winrm_password" {
  type    = string
  default = ""
}

variable "winrm_username" {
  type    = string
  default = ""
}
# The "legacy_isotime" function has been provided for backwards compatability, but we recommend switching to the timestamp and formatdate functions.

locals {
  template_description = "Windows 10 64-bit Enterprise template built with Packer - ${legacy_isotime("2006-01-02 03:04:05")}"
}

source "proxmox" "autogenerated_1" {
  additional_iso_files {
    device           = "sata3"
    iso_checksum     = "7226710d4abe5def4c8722bff7222f80a43462f0"
    iso_storage_pool = "ISO-storage"
    iso_url          = "./Autounattend.iso"
    unmount          = true
  }
  additional_iso_files {
    device  = "sata4"
    iso_url = "ISO-storage:iso/virtio-win-0.1.185.iso"
    unmount = true
  }
  communicator = "winrm"
  cores        = "${var.vm_cpu_cores}"
  disks {
    disk_size         = "${var.vm_disk_size}"
    format            = "qcow2"
    storage_pool      = "local"
    storage_pool_type = "directory"
    type              = "sata"
  }
  http_directory           = "http"
  insecure_skip_tls_verify = "${var.proxmox_skip_tls_verify}"
  iso_file                 = "${var.iso_file}"
  memory                   = "${var.vm_memory}"
  network_adapters {
    bridge   = "vmbr0"
    model    = "e1000"
    vlan_tag = "102"
  }
  node                 = "${var.proxmox_host}"
  os                   = "win10"
  password             = "${var.proxmox_password}"
  proxmox_url          = "${var.proxmox_url}"
  template_description = "${local.template_description}"
  username             = "${var.proxmox_username}"
  vm_name              = "${var.vm_name}"
  winrm_insecure       = true
  winrm_password       = "${var.winrm_password}"
  winrm_use_ssl        = true
  winrm_username       = "${var.winrm_username}"
}

build {
  sources = ["source.proxmox.autogenerated_1"]

  provisioner "windows-shell" {
    scripts = ["scripts/disablewinupdate.bat"]
  }

  provisioner "powershell" {
    scripts = ["scripts/disable-hibernate.ps1"]
  }

}
