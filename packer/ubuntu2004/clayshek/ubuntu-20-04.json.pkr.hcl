
variable "iso_checksum" {
  type    = string
  default = "f8e3086f3cea0fb3fefb29937ab5ed9d19e767079633960ccb50e76153effc98"
}

variable "iso_filename" {
  type    = string
  default = "local:iso/ubuntu-20.04.3-live-server-amd64.iso"
}

variable "proxmox_api_url" {
  type    = string
  default = "https://192.168.1.88:8006/api2/json"
}

variable "proxmox_node" {
  type    = string
  default = "proxmox"
}

variable "proxmox_password" {
  type      = string
  default   = "${env("PKR_VAR_proxmox_password")}"
  sensitive = true
}

variable "proxmox_username" {
  type    = string
  default = "automation@pve"
}

variable "ssh_password" {
  type    = string
  default = "ansible"
}

variable "ssh_username" {
  type    = string
  default = "ansible"
}

variable "template_name" {
  type    = string
  default = "tpl-ubuntu-20-04-3"
}

variable "vm_cores" {
  type    = string
  default = "2"
}

variable "vm_cpu_type" {
  type    = string
  default = "host"
}

variable "vm_disk_format" {
  type    = string
  default = "qcow2"
}

variable "vm_disk_size" {
  type    = string
  default = "30G"
}

variable "vm_disk_type" {
  type    = string
  default = "scsi"
}

variable "vm_enable_qemu_agent" {
  type    = string
  default = "true"
}

variable "vm_memory" {
  type    = string
  default = "2048"
}

variable "vm_network_adapter_bridge" {
  type    = string
  default = "vmbr0"
}

variable "vm_network_adapter_model" {
  type    = string
  default = "virtio"
}

variable "vm_scsi_controller" {
  type    = string
  default = "virtio-scsi-pci"
}

variable "vm_sockets" {
  type    = string
  default = "2"
}

variable "vm_storage_pool" {
  type    = string
  default = "vmstore"
}

variable "vm_storage_pool_type" {
  type    = string
  default = "directory"
}
# The "legacy_isotime" function has been provided for backwards compatability, but we recommend switching to the timestamp and formatdate functions.

locals {
  template_description = "Ubuntu 20.04.3 x86_64 template generated by Packer on ${legacy_isotime("2006-01-02T15:04:05Z")}. Username: ansible"
}

source "proxmox" "autogenerated_1" {
  boot_command            = ["<esc><wait><esc><wait><f6><wait><esc><wait>", "<bs><bs><bs><bs><bs>", "autoinstall ds=nocloud-net;s=http://{{ .HTTPIP }}:{{ .HTTPPort }}/ ", "--- <enter>"]
  boot_wait               = "3s"
  cloud_init              = true
  cloud_init_storage_pool = "${var.vm_storage_pool}"
  cores                   = "${var.vm_cores}"
  cpu_type                = "${var.vm_cpu_type}"
  disks {
    disk_size         = "${var.vm_disk_size}"
    format            = "${var.vm_disk_format}"
    storage_pool      = "${var.vm_storage_pool}"
    storage_pool_type = "${var.vm_storage_pool_type}"
    type              = "${var.vm_disk_type}"
  }
  http_directory           = "config"
  insecure_skip_tls_verify = true
  iso_checksum             = "${var.iso_checksum}"
  iso_file                 = "${var.iso_filename}"
  memory                   = "${var.vm_memory}"
  network_adapters {
    bridge = "${var.vm_network_adapter_bridge}"
    model  = "${var.vm_network_adapter_model}"
  }
  node                 = "${var.proxmox_node}"
  password             = "${var.proxmox_password}"
  proxmox_url          = "${var.proxmox_api_url}"
  qemu_agent           = "${var.vm_enable_qemu_agent}"
  scsi_controller      = "${var.vm_scsi_controller}"
  sockets              = "${var.vm_sockets}"
  ssh_password         = "${var.ssh_password}"
  ssh_timeout          = "20m"
  ssh_username         = "${var.ssh_username}"
  template_description = "${local.template_description}"
  template_name        = "${var.template_name}"
  unmount_iso          = true
  username             = "${var.proxmox_username}"
}

build {
  description = "Build Ubuntu 20.04.3 Proxmox template"

  sources = ["source.proxmox.autogenerated_1"]

  provisioner "shell" {
    inline = ["while [ ! -f /var/lib/cloud/instance/boot-finished ]; do echo 'Waiting for cloud-init...'; sleep 1; done"]
  }

  provisioner "shell" {
    execute_command = "echo 'ansible' | {{ .Vars }} sudo -S -E bash '{{ .Path }}'"
    scripts         = ["update.sh", "cleanup.sh"]
  }

}
