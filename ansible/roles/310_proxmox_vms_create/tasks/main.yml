# ---
- name: Create template
  include_tasks: 00-create_template.yml
  vars:
    url: "{{ item.1.url }}"
    name: "{{ item.1.name }}"
    hostname: "{{ item.1.hostname }}"
    template_name: "{{ item.1.template_name }}"
    vmid: "{{ item.1.vmid }}"
    image: "{{ item.1.image }}"
    make_template: "{{ item.1.make_template }}"
  with_subelements:
    - "{{ distros }}"
    - releases
  when: item.1.make_template == true
  # loop_control:
  #   pause: 10
  # notify: sleep

- name: Create clone
  include_tasks: 01-create_clone.yml
  vars:
    vmid: "{{ item.1.vmid }}"
    name: "{{ item.1.name }}"
    template_name: "{{ item.1.template_name }}"
    clone_id: "{{ item.1.clone_id }}"
    provisioner: "{{ item.1.provisioner }}"
    make_clone: "{{ item.1.make_clone }}"
  with_subelements:
    - "{{ distros }}"
    - releases
  # loop_control:
  #   pause: 10
  # notify: sleep

- name: Start VM
  include_tasks: 02-start_vm.yml
  vars:
    vmid: "{{ item.1.vmid }}"
    provisioner: "{{ item.1.provisioner }}"
    make_clone: "{{ item.1.make_clone }}"
  with_subelements:
    - "{{ distros }}"
    - releases
  # loop_control:
  #   pause: 10
  # notify: sleep

- name: Ping Add Ssh
  include_tasks: 03-ping_add_ssh.yml
  vars:
    clone_id: "{{ item.1.clone_id }}"
    make_clone: "{{ item.1.make_clone }}"
    hostname: "{{ item.1.hostname }}"
    interface_name: "{{ item.1.interface_name }}"
  with_subelements:
    - "{{ distros }}"
    - releases
  # loop_control:
  #   index_var: i
  #   pause: 10
  # notify: sleep
#
# ####
# # https://github.com/inoxio/ansible-role-proxmox-vms/blob/master/tasks/main.yml
# # - name: Create virtual machines
# #   proxmox_kvm:
# #     api_user: "{{ proxmox.api_user }}"
# #     api_password: "{{ proxmox.api_password }}"
# #     api_host: "{{ proxmox.api_host }}"
# #     node: "{{ item.value.node }}"
# #     name: "{{ item.key }}"
# #     net: "{{ item.value.net | default(proxmox_vms_defaults.net) }}"
# #     scsihw: "{{ item.value.scsihw | default(proxmox_vms_defaults.scsihw) }}"
# #     virtio: "{{ item.value.virtio | default(proxmox_vms_defaults.virtio) }}"
# #     cores: "{{ item.value.cores | default(proxmox_vms_defaults.cores) }}"
# #     memory: "{{ item.value.memory_size | default(proxmox_vms_defaults.memory_size) }}"
# #     balloon: "{{ item.value.balloon | default(proxmox_vms_defaults.balloon) }}"
# #     vga: "qxl"
# #     ostype: "{{ item.value.ostype | default(proxmox_vms_defaults.ostype) }}"
# #     # Look for deploy-args-file of the vm and remove all newlines. If not found take the
# #     # template-file and remove all newlines (all commands in one line). See ansible filter documentation.
# #     args: "{{ lookup('template', 'deploy-args-'~distributions[item.key]~'.j2'
# #       if deploy_file_exists_list[item.key] else proxmox_vms_defaults.deploy_args_template) |
# #       replace('\n', '') }}"
# #     cpu: "{{ item.value.cpu | default(proxmox_vms_defaults.cpu) }}"
# #     onboot: "{{ item.value.onboot | default(proxmox_vms_defaults.onboot) }}"
# #     state: present
# #   with_dict: "{{ vms }}"
# #   loop_control:
# #     pause: 10
# #   notify: sleep
# #   register: created_vms_pve
